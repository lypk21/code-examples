{"remainingRequest":"/Users/liuyingping/Desktop/www/vue/shopping/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/liuyingping/Desktop/www/vue/shopping/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuyingping/Desktop/www/vue/shopping/node_modules/cube-ui/src/components/scroll/scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuyingping/Desktop/www/vue/shopping/node_modules/cube-ui/src/components/scroll/scroll.vue","mtime":499162500000},{"path":"/Users/liuyingping/Desktop/www/vue/shopping/node_modules/cache-loader/dist/cjs.js","mtime":1578012874466},{"path":"/Users/liuyingping/Desktop/www/vue/shopping/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/liuyingping/Desktop/www/vue/shopping/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BScroll from 'better-scroll';\nimport Loading from '../loading/loading.vue';\nimport Bubble from '../bubble/bubble.vue';\nimport scrollMixin from '../../common/mixins/scroll';\nimport deprecatedMixin from '../../common/mixins/deprecated';\nimport { getRect } from '../../common/helpers/dom';\nimport { camelize } from '../../common/lang/string';\nvar COMPONENT_NAME = 'cube-scroll';\nvar DIRECTION_H = 'horizontal';\nvar DIRECTION_V = 'vertical';\nvar DEFAULT_REFRESH_TXT = 'Refresh success';\nvar DEFAULT_STOP_TIME = 600;\nvar EVENT_CLICK = 'click';\nvar EVENT_PULLING_DOWN = 'pulling-down';\nvar EVENT_PULLING_UP = 'pulling-up';\nvar EVENT_SCROLL = 'scroll';\nvar EVENT_BEFORE_SCROLL_START = 'before-scroll-start';\nvar EVENT_SCROLL_END = 'scroll-end';\nvar NEST_MODE_NONE = 'none';\nvar NEST_MODE_NATIVE = 'native';\nvar SCROLL_EVENTS = [EVENT_SCROLL, EVENT_BEFORE_SCROLL_START, EVENT_SCROLL_END];\nvar DEFAULT_OPTIONS = {\n  observeDOM: true,\n  click: true,\n  probeType: 1,\n  scrollbar: false,\n  pullDownRefresh: false,\n  pullUpLoad: false\n};\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [scrollMixin, deprecatedMixin],\n  provide: function provide() {\n    return {\n      parentScroll: this\n    };\n  },\n  inject: {\n    parentScroll: {\n      default: null\n    }\n  },\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    scrollEvents: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      validator: function validator(arr) {\n        return arr.every(function (item) {\n          return SCROLL_EVENTS.indexOf(item) !== -1;\n        });\n      }\n    },\n    // TODO: plan to remove at 1.10.0\n    listenScroll: {\n      type: Boolean,\n      default: undefined,\n      deprecated: {\n        replacedBy: 'scroll-events'\n      }\n    },\n    listenBeforeScroll: {\n      type: Boolean,\n      default: undefined,\n      deprecated: {\n        replacedBy: 'scroll-events'\n      }\n    },\n    direction: {\n      type: String,\n      default: DIRECTION_V\n    },\n    refreshDelay: {\n      type: Number,\n      default: 20\n    },\n    nestMode: {\n      type: String,\n      default: NEST_MODE_NONE\n    }\n  },\n  data: function data() {\n    return {\n      beforePullDown: true,\n      isPullingDown: false,\n      isPullUpLoad: false,\n      pullUpDirty: true,\n      bubbleY: 0,\n      pullDownStyle: '',\n      pullDownStop: 40,\n      pullDownHeight: 60\n    };\n  },\n  computed: {\n    pullDownRefresh: function pullDownRefresh() {\n      var pullDownRefresh = this.options.pullDownRefresh;\n\n      if (!pullDownRefresh) {\n        return pullDownRefresh;\n      }\n\n      if (pullDownRefresh === true) {\n        pullDownRefresh = {};\n      }\n\n      return Object.assign({\n        stop: this.pullDownStop\n      }, pullDownRefresh);\n    },\n    pullUpLoad: function pullUpLoad() {\n      return this.options.pullUpLoad;\n    },\n    pullUpTxt: function pullUpTxt() {\n      var pullUpLoad = this.pullUpLoad;\n      var txt = pullUpLoad && pullUpLoad.txt;\n      var moreTxt = txt && txt.more || '';\n      var noMoreTxt = txt && txt.noMore || '';\n      return this.pullUpDirty ? moreTxt : noMoreTxt;\n    },\n    refreshTxt: function refreshTxt() {\n      var pullDownRefresh = this.pullDownRefresh;\n      return pullDownRefresh && pullDownRefresh.txt || DEFAULT_REFRESH_TXT;\n    },\n    finalScrollEvents: function finalScrollEvents() {\n      var finalScrollEvents = this.scrollEvents.slice();\n\n      if (!finalScrollEvents.length) {\n        this.listenScroll && finalScrollEvents.push(EVENT_SCROLL);\n        this.listenBeforeScroll && finalScrollEvents.push(EVENT_BEFORE_SCROLL_START);\n      }\n\n      return finalScrollEvents;\n    },\n    needListenScroll: function needListenScroll() {\n      return this.finalScrollEvents.indexOf(EVENT_SCROLL) !== -1 || this.parentScroll;\n    }\n  },\n  watch: {\n    data: function data() {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.forceUpdate(true);\n      }, this.refreshDelay);\n    },\n    pullDownRefresh: {\n      handler: function handler(newVal, oldVal) {\n        if (newVal) {\n          this.scroll.openPullDown(newVal);\n\n          if (!oldVal) {\n            this._onPullDownRefresh();\n\n            this._calculateMinHeight();\n          }\n        }\n\n        if (!newVal && oldVal) {\n          this.scroll.closePullDown();\n\n          this._offPullDownRefresh();\n\n          this._calculateMinHeight();\n        }\n      },\n      deep: true\n    },\n    pullUpLoad: {\n      handler: function handler(newVal, oldVal) {\n        if (newVal) {\n          this.scroll.openPullUp(newVal);\n\n          if (!oldVal) {\n            this._onPullUpLoad();\n\n            this._calculateMinHeight();\n          }\n        }\n\n        if (!newVal && oldVal) {\n          this.scroll.closePullUp();\n\n          this._offPullUpLoad();\n\n          this._calculateMinHeight();\n        }\n      },\n      deep: true\n    }\n  },\n  activated: function activated() {\n    /* istanbul ignore next */\n    this.enable();\n  },\n  deactivated: function deactivated() {\n    /* istanbul ignore next */\n    this.disable();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.initScroll();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.destroy();\n  },\n  methods: {\n    initScroll: function initScroll() {\n      if (!this.$refs.wrapper) {\n        return;\n      }\n\n      this._calculateMinHeight();\n\n      var options = Object.assign({}, DEFAULT_OPTIONS, {\n        scrollY: this.direction === DIRECTION_V,\n        scrollX: this.direction === DIRECTION_H,\n        probeType: this.needListenScroll ? 3 : 1\n      }, this.options);\n      this.scroll = new BScroll(this.$refs.wrapper, options);\n      this.parentScroll && this.nestMode !== NEST_MODE_NONE && this._handleNestScroll();\n\n      this._listenScrollEvents();\n\n      if (this.pullDownRefresh) {\n        this._getPullDownEleHeight();\n\n        this._onPullDownRefresh();\n      }\n\n      if (this.pullUpLoad) {\n        this._onPullUpLoad();\n      }\n    },\n    disable: function disable() {\n      this.scroll && this.scroll.disable();\n    },\n    enable: function enable() {\n      this.scroll && this.scroll.enable();\n    },\n    refresh: function refresh() {\n      this._calculateMinHeight();\n\n      this.scroll && this.scroll.refresh();\n    },\n    destroy: function destroy() {\n      this.scroll && this.scroll.destroy();\n      this.scroll = null;\n    },\n    scrollTo: function scrollTo() {\n      this.scroll && this.scroll.scrollTo.apply(this.scroll, arguments);\n    },\n    scrollToElement: function scrollToElement() {\n      this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments);\n    },\n    clickItem: function clickItem(item) {\n      this.$emit(EVENT_CLICK, item);\n    },\n    forceUpdate: function forceUpdate() {\n      var _this3 = this;\n\n      var dirty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.pullDownRefresh && this.isPullingDown) {\n        this.isPullingDown = false;\n\n        this._reboundPullDown(function () {\n          _this3._afterPullDown(dirty);\n        });\n      } else if (this.pullUpLoad && this.isPullUpLoad) {\n        this.isPullUpLoad = false;\n        this.scroll.finishPullUp();\n        this.pullUpDirty = dirty;\n        dirty && this.refresh();\n      } else {\n        dirty && this.refresh();\n      }\n    },\n    resetPullUpTxt: function resetPullUpTxt() {\n      this.pullUpDirty = true;\n    },\n    _listenScrollEvents: function _listenScrollEvents() {\n      var _this4 = this;\n\n      this.finalScrollEvents.forEach(function (event) {\n        _this4.scroll.on(camelize(event), function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this4.$emit.apply(_this4, [event].concat(args));\n        });\n      });\n    },\n    _handleNestScroll: function _handleNestScroll() {\n      var _this5 = this;\n\n      // waiting scroll initial\n      this.$nextTick(function () {\n        var innerScroll = _this5.scroll;\n        var outerScroll = _this5.parentScroll.scroll;\n        var scrolls = [innerScroll, outerScroll];\n        scrolls.forEach(function (scroll, index, arr) {\n          // scroll ended always enable them\n          scroll.on('touchEnd', function () {\n            outerScroll.enable();\n            innerScroll.enable(); // when inner scroll reaching boundary, we will disable inner scroll, so when 'touchend' event fire,\n            // the inner scroll will not reset initiated within '_end' method in better-scroll.\n            // then lead to inner and outer scrolls together when we touch and move on the outer scroll element,\n            // so here we reset inner scroll's 'initiated' manually.\n\n            innerScroll.initiated = false;\n          });\n          scroll.on('beforeScrollStart', function () {\n            _this5.touchStartMoment = true;\n            var anotherScroll = arr[(index + 1) % 2];\n            anotherScroll.stop();\n            anotherScroll.resetPosition();\n          });\n        });\n        innerScroll.on('scroll', function (pos) {\n          // if scroll event triggered not by touch event, such as by 'scrollTo' method\n          if (!innerScroll.initiated || innerScroll.isInTransition) {\n            return;\n          }\n\n          if (_this5.nestMode === NEST_MODE_NATIVE && !_this5.touchStartMoment) {\n            return;\n          }\n\n          var reachBoundary = _this5._checkReachBoundary(pos);\n\n          if (reachBoundary) {\n            innerScroll.resetPosition();\n            innerScroll.disable(); // Prevent outer scroll have a bouncing step when enabled in 'free' nestMode.\n\n            outerScroll.pointX = innerScroll.pointX;\n            outerScroll.pointY = innerScroll.pointY;\n            outerScroll.enable();\n          } else {\n            outerScroll.disable();\n          }\n\n          _this5.touchStartMoment = false;\n        });\n      });\n    },\n    _checkReachBoundary: function _checkReachBoundary(pos) {\n      var distX = this.scroll.distX;\n      var distY = this.scroll.distY;\n      var reachBoundaryX = distX > 0 ? pos.x >= this.scroll.minScrollX : distX < 0 ? pos.x <= this.scroll.maxScrollX : false;\n      var reachBoundaryY = distY > 0 ? pos.y >= this.scroll.minScrollY : distY < 0 ? pos.y <= this.scroll.maxScrollY : false;\n      var freeScroll = this.scroll.freeScroll;\n      var reachBoundary;\n\n      if (freeScroll) {\n        return reachBoundaryX || reachBoundaryY;\n      }\n\n      if (this.scroll.movingDirectionX) {\n        reachBoundary = reachBoundaryX;\n      } else if (this.scroll.movingDirectionY) {\n        reachBoundary = reachBoundaryY;\n      }\n\n      return reachBoundary;\n    },\n    _calculateMinHeight: function _calculateMinHeight() {\n      if (this.$refs.listWrapper) {\n        this.$refs.listWrapper.style.minHeight = this.pullDownRefresh || this.pullUpLoad ? \"\".concat(getRect(this.$refs.wrapper).height + 1, \"px\") : 0;\n      }\n    },\n    _onPullDownRefresh: function _onPullDownRefresh() {\n      this.scroll.on('pullingDown', this._pullDownHandle);\n      this.scroll.on('scroll', this._pullDownScrollHandle);\n    },\n    _offPullDownRefresh: function _offPullDownRefresh() {\n      this.scroll.off('pullingDown', this._pullDownHandle);\n      this.scroll.off('scroll', this._pullDownScrollHandle);\n    },\n    _pullDownHandle: function _pullDownHandle() {\n      if (this.resetPullDownTimer) {\n        clearTimeout(this.resetPullDownTimer);\n      }\n\n      this.beforePullDown = false;\n      this.isPullingDown = true;\n      this.$emit(EVENT_PULLING_DOWN);\n    },\n    _pullDownScrollHandle: function _pullDownScrollHandle(pos) {\n      if (this.beforePullDown) {\n        this.bubbleY = Math.max(0, pos.y - this.pullDownHeight);\n        this.pullDownStyle = \"top:\".concat(Math.min(pos.y - this.pullDownHeight, 0), \"px\");\n      } else {\n        this.bubbleY = 0;\n        this.pullDownStyle = \"top:\".concat(Math.min(pos.y - this.pullDownStop, 0), \"px\");\n      }\n    },\n    _onPullUpLoad: function _onPullUpLoad() {\n      this.scroll.on('pullingUp', this._pullUpHandle);\n    },\n    _offPullUpLoad: function _offPullUpLoad() {\n      this.scroll.off('pullingUp', this._pullUpHandle);\n    },\n    _pullUpHandle: function _pullUpHandle() {\n      this.isPullUpLoad = true;\n      this.$emit(EVENT_PULLING_UP);\n    },\n    _reboundPullDown: function _reboundPullDown(next) {\n      var _this6 = this;\n\n      var _this$pullDownRefresh = this.pullDownRefresh.stopTime,\n          stopTime = _this$pullDownRefresh === void 0 ? DEFAULT_STOP_TIME : _this$pullDownRefresh;\n      setTimeout(function () {\n        _this6.scroll.finishPullDown();\n\n        next();\n      }, stopTime);\n    },\n    _afterPullDown: function _afterPullDown(dirty) {\n      var _this7 = this;\n\n      this.resetPullDownTimer = setTimeout(function () {\n        _this7.pullDownStyle = \"top: -\".concat(_this7.pullDownHeight, \"px\");\n        _this7.beforePullDown = true;\n        dirty && _this7.refresh();\n      }, this.scroll.options.bounceTime);\n    },\n    _getPullDownEleHeight: function _getPullDownEleHeight() {\n      var _this8 = this;\n\n      var pulldown = this.$refs.pulldown.firstChild;\n      this.pullDownHeight = getRect(pulldown).height;\n      this.beforePullDown = false;\n      this.isPullingDown = true;\n      this.$nextTick(function () {\n        _this8.pullDownStop = getRect(pulldown).height;\n        _this8.beforePullDown = true;\n        _this8.isPullingDown = false;\n      });\n    }\n  },\n  components: {\n    Loading: Loading,\n    Bubble: Bubble\n  }\n};",{"version":3,"sources":["scroll.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"wrapper\" class=\"cube-scroll-wrapper\">\n    <div class=\"cube-scroll-content\">\n      <div ref=\"listWrapper\" class=\"cube-scroll-list-wrapper\">\n        <slot>\n          <ul class=\"cube-scroll-list\">\n            <li\n              class=\"cube-scroll-item border-bottom-1px\"\n              v-for=\"(item, index) in data\"\n              :key=\"index\"\n              @click=\"clickItem(item)\">{{item}}</li>\n          </ul>\n        </slot>\n      </div>\n      <slot name=\"pullup\" :pullUpLoad=\"pullUpLoad\" :isPullUpLoad=\"isPullUpLoad\">\n        <div class=\"cube-pullup-wrapper\" v-if=\"pullUpLoad\">\n          <div class=\"before-trigger\" v-if=\"!isPullUpLoad\">\n            <span>{{ pullUpTxt }}</span>\n          </div>\n          <div class=\"after-trigger\" v-else>\n            <loading></loading>\n          </div>\n        </div>\n      </slot>\n    </div>\n    <div v-if=\"pullDownRefresh\" class=\"cube-pulldown\" ref=\"pulldown\">\n      <slot\n        name=\"pulldown\"\n        :pullDownRefresh=\"pullDownRefresh\"\n        :pullDownStyle=\"pullDownStyle\"\n        :beforePullDown=\"beforePullDown\"\n        :isPullingDown=\"isPullingDown\"\n        :bubbleY=\"bubbleY\">\n        <div class=\"cube-pulldown-wrapper\" :style=\"pullDownStyle\">\n          <div class=\"before-trigger\" v-show=\"beforePullDown\">\n            <bubble :y=\"bubbleY\" class=\"bubble\"></bubble>\n          </div>\n          <div class=\"after-trigger\" v-show=\"!beforePullDown\">\n            <div v-show=\"isPullingDown\" class=\"loading\">\n              <loading></loading>\n            </div>\n            <div v-show=\"!isPullingDown\" class=\"cube-pulldown-loaded\"><span>{{ refreshTxt }}</span></div>\n          </div>\n        </div>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import BScroll from 'better-scroll'\n  import Loading from '../loading/loading.vue'\n  import Bubble from '../bubble/bubble.vue'\n  import scrollMixin from '../../common/mixins/scroll'\n  import deprecatedMixin from '../../common/mixins/deprecated'\n  import { getRect } from '../../common/helpers/dom'\n  import { camelize } from '../../common/lang/string'\n\n  const COMPONENT_NAME = 'cube-scroll'\n  const DIRECTION_H = 'horizontal'\n  const DIRECTION_V = 'vertical'\n  const DEFAULT_REFRESH_TXT = 'Refresh success'\n  const DEFAULT_STOP_TIME = 600\n\n  const EVENT_CLICK = 'click'\n  const EVENT_PULLING_DOWN = 'pulling-down'\n  const EVENT_PULLING_UP = 'pulling-up'\n\n  const EVENT_SCROLL = 'scroll'\n  const EVENT_BEFORE_SCROLL_START = 'before-scroll-start'\n  const EVENT_SCROLL_END = 'scroll-end'\n\n  const NEST_MODE_NONE = 'none'\n  const NEST_MODE_NATIVE = 'native'\n\n  const SCROLL_EVENTS = [EVENT_SCROLL, EVENT_BEFORE_SCROLL_START, EVENT_SCROLL_END]\n\n  const DEFAULT_OPTIONS = {\n    observeDOM: true,\n    click: true,\n    probeType: 1,\n    scrollbar: false,\n    pullDownRefresh: false,\n    pullUpLoad: false\n  }\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [scrollMixin, deprecatedMixin],\n    provide() {\n      return {\n        parentScroll: this\n      }\n    },\n    inject: {\n      parentScroll: {\n        default: null\n      }\n    },\n    props: {\n      data: {\n        type: Array,\n        default() {\n          return []\n        }\n      },\n      scrollEvents: {\n        type: Array,\n        default() {\n          return []\n        },\n        validator(arr) {\n          return arr.every((item) => {\n            return SCROLL_EVENTS.indexOf(item) !== -1\n          })\n        }\n      },\n      // TODO: plan to remove at 1.10.0\n      listenScroll: {\n        type: Boolean,\n        default: undefined,\n        deprecated: {\n          replacedBy: 'scroll-events'\n        }\n      },\n      listenBeforeScroll: {\n        type: Boolean,\n        default: undefined,\n        deprecated: {\n          replacedBy: 'scroll-events'\n        }\n      },\n      direction: {\n        type: String,\n        default: DIRECTION_V\n      },\n      refreshDelay: {\n        type: Number,\n        default: 20\n      },\n      nestMode: {\n        type: String,\n        default: NEST_MODE_NONE\n      }\n    },\n    data() {\n      return {\n        beforePullDown: true,\n        isPullingDown: false,\n        isPullUpLoad: false,\n        pullUpDirty: true,\n        bubbleY: 0,\n        pullDownStyle: '',\n        pullDownStop: 40,\n        pullDownHeight: 60\n      }\n    },\n    computed: {\n      pullDownRefresh() {\n        let pullDownRefresh = this.options.pullDownRefresh\n        if (!pullDownRefresh) {\n          return pullDownRefresh\n        }\n        if (pullDownRefresh === true) {\n          pullDownRefresh = {}\n        }\n        return Object.assign({stop: this.pullDownStop}, pullDownRefresh)\n      },\n      pullUpLoad() {\n        return this.options.pullUpLoad\n      },\n      pullUpTxt() {\n        const pullUpLoad = this.pullUpLoad\n        const txt = pullUpLoad && pullUpLoad.txt\n        const moreTxt = (txt && txt.more) || ''\n        const noMoreTxt = (txt && txt.noMore) || ''\n\n        return this.pullUpDirty ? moreTxt : noMoreTxt\n      },\n      refreshTxt() {\n        const pullDownRefresh = this.pullDownRefresh\n        return (pullDownRefresh && pullDownRefresh.txt) || DEFAULT_REFRESH_TXT\n      },\n      finalScrollEvents() {\n        const finalScrollEvents = this.scrollEvents.slice()\n\n        if (!finalScrollEvents.length) {\n          this.listenScroll && finalScrollEvents.push(EVENT_SCROLL)\n          this.listenBeforeScroll && finalScrollEvents.push(EVENT_BEFORE_SCROLL_START)\n        }\n        return finalScrollEvents\n      },\n      needListenScroll() {\n        return this.finalScrollEvents.indexOf(EVENT_SCROLL) !== -1 || this.parentScroll\n      }\n    },\n    watch: {\n      data() {\n        setTimeout(() => {\n          this.forceUpdate(true)\n        }, this.refreshDelay)\n      },\n      pullDownRefresh: {\n        handler(newVal, oldVal) {\n          if (newVal) {\n            this.scroll.openPullDown(newVal)\n            if (!oldVal) {\n              this._onPullDownRefresh()\n              this._calculateMinHeight()\n            }\n          }\n\n          if (!newVal && oldVal) {\n            this.scroll.closePullDown()\n            this._offPullDownRefresh()\n            this._calculateMinHeight()\n          }\n        },\n        deep: true\n      },\n      pullUpLoad: {\n        handler(newVal, oldVal) {\n          if (newVal) {\n            this.scroll.openPullUp(newVal)\n            if (!oldVal) {\n              this._onPullUpLoad()\n              this._calculateMinHeight()\n            }\n          }\n\n          if (!newVal && oldVal) {\n            this.scroll.closePullUp()\n            this._offPullUpLoad()\n            this._calculateMinHeight()\n          }\n        },\n        deep: true\n      }\n    },\n    activated() {\n      /* istanbul ignore next */\n      this.enable()\n    },\n    deactivated() {\n      /* istanbul ignore next */\n      this.disable()\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initScroll()\n      })\n    },\n    beforeDestroy() {\n      this.destroy()\n    },\n    methods: {\n      initScroll() {\n        if (!this.$refs.wrapper) {\n          return\n        }\n        this._calculateMinHeight()\n\n        let options = Object.assign({}, DEFAULT_OPTIONS, {\n          scrollY: this.direction === DIRECTION_V,\n          scrollX: this.direction === DIRECTION_H,\n          probeType: this.needListenScroll ? 3 : 1\n        }, this.options)\n\n        this.scroll = new BScroll(this.$refs.wrapper, options)\n\n        this.parentScroll && this.nestMode !== NEST_MODE_NONE && this._handleNestScroll()\n\n        this._listenScrollEvents()\n\n        if (this.pullDownRefresh) {\n          this._getPullDownEleHeight()\n          this._onPullDownRefresh()\n        }\n\n        if (this.pullUpLoad) {\n          this._onPullUpLoad()\n        }\n      },\n      disable() {\n        this.scroll && this.scroll.disable()\n      },\n      enable() {\n        this.scroll && this.scroll.enable()\n      },\n      refresh() {\n        this._calculateMinHeight()\n        this.scroll && this.scroll.refresh()\n      },\n      destroy() {\n        this.scroll && this.scroll.destroy()\n        this.scroll = null\n      },\n      scrollTo() {\n        this.scroll && this.scroll.scrollTo.apply(this.scroll, arguments)\n      },\n      scrollToElement() {\n        this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments)\n      },\n      clickItem(item) {\n        this.$emit(EVENT_CLICK, item)\n      },\n      forceUpdate(dirty = false) {\n        if (this.pullDownRefresh && this.isPullingDown) {\n          this.isPullingDown = false\n          this._reboundPullDown(() => {\n            this._afterPullDown(dirty)\n          })\n        } else if (this.pullUpLoad && this.isPullUpLoad) {\n          this.isPullUpLoad = false\n          this.scroll.finishPullUp()\n          this.pullUpDirty = dirty\n          dirty && this.refresh()\n        } else {\n          dirty && this.refresh()\n        }\n      },\n      resetPullUpTxt() {\n        this.pullUpDirty = true\n      },\n      _listenScrollEvents() {\n        this.finalScrollEvents.forEach((event) => {\n          this.scroll.on(camelize(event), (...args) => {\n            this.$emit(event, ...args)\n          })\n        })\n      },\n      _handleNestScroll() {\n        // waiting scroll initial\n        this.$nextTick(() => {\n          const innerScroll = this.scroll\n          const outerScroll = this.parentScroll.scroll\n          const scrolls = [innerScroll, outerScroll]\n          scrolls.forEach((scroll, index, arr) => {\n            // scroll ended always enable them\n            scroll.on('touchEnd', () => {\n              outerScroll.enable()\n              innerScroll.enable()\n              // when inner scroll reaching boundary, we will disable inner scroll, so when 'touchend' event fire,\n              // the inner scroll will not reset initiated within '_end' method in better-scroll.\n              // then lead to inner and outer scrolls together when we touch and move on the outer scroll element,\n              // so here we reset inner scroll's 'initiated' manually.\n              innerScroll.initiated = false\n            })\n\n            scroll.on('beforeScrollStart', () => {\n              this.touchStartMoment = true\n              const anotherScroll = arr[(index + 1) % 2]\n              anotherScroll.stop()\n              anotherScroll.resetPosition()\n            })\n          })\n\n          innerScroll.on('scroll', (pos) => {\n            // if scroll event triggered not by touch event, such as by 'scrollTo' method\n            if (!innerScroll.initiated || innerScroll.isInTransition) {\n              return\n            }\n\n            if (this.nestMode === NEST_MODE_NATIVE && !this.touchStartMoment) {\n              return\n            }\n\n            const reachBoundary = this._checkReachBoundary(pos)\n            if (reachBoundary) {\n              innerScroll.resetPosition()\n              innerScroll.disable()\n              // Prevent outer scroll have a bouncing step when enabled in 'free' nestMode.\n              outerScroll.pointX = innerScroll.pointX\n              outerScroll.pointY = innerScroll.pointY\n              outerScroll.enable()\n            } else {\n              outerScroll.disable()\n            }\n            this.touchStartMoment = false\n          })\n        })\n      },\n      _checkReachBoundary(pos) {\n        const distX = this.scroll.distX\n        const distY = this.scroll.distY\n        const reachBoundaryX = distX > 0 ? pos.x >= this.scroll.minScrollX : distX < 0 ? pos.x <= this.scroll.maxScrollX : false\n        const reachBoundaryY = distY > 0 ? pos.y >= this.scroll.minScrollY : distY < 0 ? pos.y <= this.scroll.maxScrollY : false\n        const freeScroll = this.scroll.freeScroll\n\n        let reachBoundary\n        if (freeScroll) {\n          return reachBoundaryX || reachBoundaryY\n        }\n\n        if (this.scroll.movingDirectionX) {\n          reachBoundary = reachBoundaryX\n        } else if (this.scroll.movingDirectionY) {\n          reachBoundary = reachBoundaryY\n        }\n        return reachBoundary\n      },\n      _calculateMinHeight() {\n        if (this.$refs.listWrapper) {\n          this.$refs.listWrapper.style.minHeight = this.pullDownRefresh || this.pullUpLoad ? `${getRect(this.$refs.wrapper).height + 1}px` : 0\n        }\n      },\n      _onPullDownRefresh() {\n        this.scroll.on('pullingDown', this._pullDownHandle)\n        this.scroll.on('scroll', this._pullDownScrollHandle)\n      },\n      _offPullDownRefresh() {\n        this.scroll.off('pullingDown', this._pullDownHandle)\n        this.scroll.off('scroll', this._pullDownScrollHandle)\n      },\n      _pullDownHandle() {\n        if (this.resetPullDownTimer) {\n          clearTimeout(this.resetPullDownTimer)\n        }\n        this.beforePullDown = false\n        this.isPullingDown = true\n        this.$emit(EVENT_PULLING_DOWN)\n      },\n      _pullDownScrollHandle(pos) {\n        if (this.beforePullDown) {\n          this.bubbleY = Math.max(0, pos.y - this.pullDownHeight)\n          this.pullDownStyle = `top:${Math.min(pos.y - this.pullDownHeight, 0)}px`\n        } else {\n          this.bubbleY = 0\n          this.pullDownStyle = `top:${Math.min(pos.y - this.pullDownStop, 0)}px`\n        }\n      },\n      _onPullUpLoad() {\n        this.scroll.on('pullingUp', this._pullUpHandle)\n      },\n      _offPullUpLoad() {\n        this.scroll.off('pullingUp', this._pullUpHandle)\n      },\n      _pullUpHandle() {\n        this.isPullUpLoad = true\n        this.$emit(EVENT_PULLING_UP)\n      },\n      _reboundPullDown(next) {\n        const {stopTime = DEFAULT_STOP_TIME} = this.pullDownRefresh\n        setTimeout(() => {\n          this.scroll.finishPullDown()\n          next()\n        }, stopTime)\n      },\n      _afterPullDown(dirty) {\n        this.resetPullDownTimer = setTimeout(() => {\n          this.pullDownStyle = `top: -${this.pullDownHeight}px`\n          this.beforePullDown = true\n          dirty && this.refresh()\n        }, this.scroll.options.bounceTime)\n      },\n      _getPullDownEleHeight() {\n        const pulldown = this.$refs.pulldown.firstChild\n        this.pullDownHeight = getRect(pulldown).height\n\n        this.beforePullDown = false\n        this.isPullingDown = true\n        this.$nextTick(() => {\n          this.pullDownStop = getRect(pulldown).height\n\n          this.beforePullDown = true\n          this.isPullingDown = false\n        })\n      }\n    },\n    components: {\n      Loading,\n      Bubble\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n\n  .cube-scroll-wrapper\n    position: relative\n    height: 100%\n    overflow: hidden\n\n  .cube-scroll-list-wrapper\n    overflow: hidden\n\n  .cube-pulldown-wrapper\n    position: absolute\n    width: 100%\n    left: 0\n    display: flex\n    justify-content: center\n    align-items: center\n    transition: all\n    .before-trigger\n      height: 54px\n      line-height: 0\n      padding-top: 6px\n    .after-trigger\n      .loading\n        padding: 8px 0\n      .cube-pulldown-loaded\n        padding: 12px 0\n\n  .cube-pullup-wrapper\n    width: 100%\n    display: flex\n    justify-content: center\n    align-items: center\n    .before-trigger\n      padding: 22px 0\n      min-height: 1em\n    .after-trigger\n      padding: 19px 0\n\n  .cube-scroll-content\n    position: relative\n    z-index: 1\n\n  .cube-scroll-item\n    height: 60px\n    line-height: 60px\n    font-size: $fontsize-large-x\n    padding-left: 20px\n</style>\n"],"sourceRoot":"node_modules/cube-ui/src/components/scroll"}]}