{"remainingRequest":"/Users/liuyingping/Desktop/www/vue/shopping/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/liuyingping/Desktop/www/vue/shopping/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuyingping/Desktop/www/vue/shopping/src/components/cart-control/cart-control.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuyingping/Desktop/www/vue/shopping/src/components/cart-control/cart-control.vue","mtime":1578012741867},{"path":"/Users/liuyingping/Desktop/www/vue/shopping/node_modules/cache-loader/dist/cjs.js","mtime":1578012874466},{"path":"/Users/liuyingping/Desktop/www/vue/shopping/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/liuyingping/Desktop/www/vue/shopping/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar EVENT_ADD = 'add';\nexport default {\n  name: 'cart-control',\n  props: {\n    food: {\n      type: Object\n    }\n  },\n  methods: {\n    add: function add(event) {\n      if (!this.food.count) {\n        this.$set(this.food, 'count', 1);\n      } else {\n        this.food.count++;\n      }\n\n      this.$emit(EVENT_ADD, event.target);\n    },\n    decrease: function decrease() {\n      if (this.food.count) {\n        this.food.count--;\n      }\n    }\n  }\n};",{"version":3,"sources":["cart-control.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,IAAA,YAAA,KAAA;AAEA,eAAA;AACA,QAAA,cADA;AAEA,SAAA;AACA,UAAA;AACA,YAAA;AADA;AADA,GAFA;AAOA,WAAA;AACA,OADA,eACA,KADA,EACA;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,KAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,IAAA,EAAA,OAAA,EAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,IAAA,CAAA,KAAA;AACA;;AACA,WAAA,KAAA,CAAA,SAAA,EAAA,MAAA,MAAA;AACA,KARA;AASA,YATA,sBASA;AACA,UAAA,KAAA,IAAA,CAAA,KAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA;AACA;AACA;AAbA;AAPA,CAAA","sourcesContent":["<template>\n  <div class=\"cartcontrol\">\n    <transition name=\"move\">\n      <div class=\"cart-decrease\" v-show=\"food.count>0\" @click.stop=\"decrease\">\n        <span class=\"inner icon-remove_circle_outline\"></span>\n      </div>\n    </transition>\n    <div class=\"cart-count\" v-show=\"food.count>0\">{{food.count}}</div>\n    <div class=\"cart-add icon-add_circle\" @click.stop=\"add\"></div>\n  </div>\n</template>\n\n<script>\n  const EVENT_ADD = 'add'\n\n  export default {\n    name: 'cart-control',\n    props: {\n      food: {\n        type: Object\n      }\n    },\n    methods: {\n      add(event) {\n        if (!this.food.count) {\n          this.$set(this.food, 'count', 1)\n        } else {\n          this.food.count++\n        }\n        this.$emit(EVENT_ADD, event.target)\n      },\n      decrease() {\n        if (this.food.count) {\n          this.food.count--\n        }\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n  @import \"~common/stylus/variable\"\n\n  .cartcontrol\n    display: flex\n    align-items: center\n    .cart-decrease\n      display: inline-block\n      padding: 6px\n      opacity: 1\n      .inner\n        display: inline-block\n        line-height: 24px\n        font-size: $fontsize-large-xxx\n        color: $color-blue\n        transition: all 0.4s linear\n        transform: rotate(0)\n      &.move-enter-active, &.move-leave-active\n        transition: all 0.4s linear\n      &.move-enter, &.move-leave-active\n        opacity: 0\n        transform: translate3d(24px, 0, 0)\n        .inner\n          transform: rotate(180deg)\n    .cart-count\n      width: 12px\n      line-height: 24px\n      text-align: center\n      font-size: $fontsize-small-s\n      color: $color-grey\n    .cart-add\n      display: inline-block\n      padding: 6px\n      line-height: 24px\n      font-size: $fontsize-large-xxx\n      color: $color-blue\n</style>\n"],"sourceRoot":"src/components/cart-control"}]}