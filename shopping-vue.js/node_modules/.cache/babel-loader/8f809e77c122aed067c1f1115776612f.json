{"remainingRequest":"/Users/liuyingping/Desktop/www/vue-sell/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/liuyingping/Desktop/www/vue-sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuyingping/Desktop/www/vue-sell/node_modules/cube-ui/src/components/tab-bar/tab-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuyingping/Desktop/www/vue-sell/node_modules/cube-ui/src/components/tab-bar/tab-bar.vue","mtime":499162500000},{"path":"/Users/liuyingping/Desktop/www/vue-sell/node_modules/cache-loader/dist/cjs.js","mtime":1578012874466},{"path":"/Users/liuyingping/Desktop/www/vue-sell/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/liuyingping/Desktop/www/vue-sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { prefixStyle } from '../../common/helpers/dom';\nimport { findIndex } from '../../common/helpers/util';\nimport CubeTab from './tab.vue';\nvar COMPONENT_NAME = 'cube-tab-bar';\nvar EVENT_INPUT = 'input';\nvar EVENT_CHANGE = 'change';\nvar EVENT_CLICK = 'click';\nvar TRANSFORM = prefixStyle('transform');\nvar TRANSITION = prefixStyle('transition');\nexport default {\n  name: COMPONENT_NAME,\n  components: {\n    CubeTab: CubeTab\n  },\n  props: {\n    value: {\n      type: [String, Number],\n      required: true\n    },\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    inline: {\n      type: Boolean,\n      default: false\n    },\n    showSlider: {\n      type: Boolean,\n      default: false\n    },\n    useTransition: {\n      type: Boolean,\n      default: true\n    }\n  },\n  created: function created() {\n    this.tabs = [];\n  },\n  mounted: function mounted() {\n    this._updateSliderStyle();\n\n    window.addEventListener('resize', this._resizeHandler);\n  },\n  activated: function activated() {\n    /* istanbul ignore next */\n    window.addEventListener('resize', this._resizeHandler);\n  },\n  deactivated: function deactivated() {\n    /* istanbul ignore next */\n    this._cleanUp();\n  },\n  beforeDestroy: function beforeDestroy() {\n    /* istanbul ignore next */\n    this._cleanUp();\n  },\n  methods: {\n    addTab: function addTab(tab) {\n      this.tabs.push(tab);\n    },\n    removeTab: function removeTab(tab) {\n      var index = this.tabs.indexOf(tab);\n      if (index > -1) this.tabs.splice(index, 1);\n    },\n    trigger: function trigger(label) {\n      var _this = this;\n\n      // emit click event as long as tab is clicked\n      this.$emit(EVENT_CLICK, label); // only when value changed, emit change & input event\n\n      if (label !== this.value) {\n        var changedEvents = [EVENT_INPUT, EVENT_CHANGE];\n        changedEvents.forEach(function (eventType) {\n          _this.$emit(eventType, label);\n        });\n      }\n    },\n    _updateSliderStyle: function _updateSliderStyle() {\n      var _this2 = this;\n\n      /* istanbul ignore if */\n      if (!this.showSlider) return;\n      var slider = this.$refs.slider;\n      this.$nextTick(function () {\n        var _this2$_getSliderWidt = _this2._getSliderWidthAndIndex(),\n            width = _this2$_getSliderWidt.width,\n            index = _this2$_getSliderWidt.index;\n\n        slider.style.width = \"\".concat(width, \"px\");\n\n        _this2.setSliderTransform(_this2._getOffsetLeft(index));\n      });\n    },\n    setSliderTransform: function setSliderTransform(offset) {\n      var slider = this.$refs.slider;\n\n      if (typeof offset === 'number') {\n        offset = \"\".concat(offset, \"px\");\n      }\n\n      if (slider) {\n        if (this.useTransition) slider.style[TRANSITION] = \"\".concat(TRANSFORM, \" 0.2s linear\");\n        slider.style[TRANSFORM] = \"translateX(\".concat(offset, \") translateZ(0)\");\n      }\n    },\n    _getSliderWidthAndIndex: function _getSliderWidthAndIndex() {\n      var _this3 = this;\n\n      var width = 0;\n      var index = 0;\n\n      if (this.tabs.length > 0) {\n        index = findIndex(this.tabs, function (tab) {\n          return tab.label === _this3.value;\n        });\n        width = this.tabs[index].$el.clientWidth;\n      }\n\n      return {\n        width: width,\n        index: index\n      };\n    },\n    _getOffsetLeft: function _getOffsetLeft(index) {\n      var offsetLeft = 0;\n      this.tabs.forEach(function (tab, i) {\n        if (i < index) offsetLeft += tab.$el.clientWidth;\n      });\n      return offsetLeft;\n    },\n    _resizeHandler: function _resizeHandler() {\n      var _this4 = this;\n\n      clearTimeout(this._resizeTimer);\n      this._resizeTimer = setTimeout(function () {\n        _this4._updateSliderStyle();\n      }, 60);\n    },\n    _cleanUp: function _cleanUp() {\n      clearTimeout(this._resizeTimer);\n      window.removeEventListener('resize', this._resizeHandler);\n    }\n  },\n  watch: {\n    value: function value() {\n      this._updateSliderStyle();\n    }\n  }\n};",{"version":3,"sources":["tab-bar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cube-tab-bar\" :class=\"{'cube-tab-bar_inline': inline}\">\n    <slot>\n      <cube-tab\n        v-for=\"(item, index) in data\"\n        :label=\"item.label\"\n        :icon=\"item.icon\"\n        :key=\"item.label\">\n      </cube-tab>\n    </slot>\n    <div v-if=\"showSlider\" ref=\"slider\" class=\"cube-tab-bar-slider\"></div>\n  </div>\n</template>\n<script type=\"text/ecmascript-6\">\n  import { prefixStyle } from '../../common/helpers/dom'\n  import { findIndex } from '../../common/helpers/util'\n  import CubeTab from './tab.vue'\n\n  const COMPONENT_NAME = 'cube-tab-bar'\n\n  const EVENT_INPUT = 'input'\n  const EVENT_CHANGE = 'change'\n  const EVENT_CLICK = 'click'\n\n  const TRANSFORM = prefixStyle('transform')\n  const TRANSITION = prefixStyle('transition')\n\n  export default {\n    name: COMPONENT_NAME,\n    components: {\n      CubeTab\n    },\n    props: {\n      value: {\n        type: [String, Number],\n        required: true\n      },\n      data: {\n        type: Array,\n        default () {\n          return []\n        }\n      },\n      inline: {\n        type: Boolean,\n        default: false\n      },\n      showSlider: {\n        type: Boolean,\n        default: false\n      },\n      useTransition: {\n        type: Boolean,\n        default: true\n      }\n    },\n    created () {\n      this.tabs = []\n    },\n    mounted () {\n      this._updateSliderStyle()\n      window.addEventListener('resize', this._resizeHandler)\n    },\n    activated() {\n      /* istanbul ignore next */\n      window.addEventListener('resize', this._resizeHandler)\n    },\n    deactivated() {\n      /* istanbul ignore next */\n      this._cleanUp()\n    },\n    beforeDestroy () {\n      /* istanbul ignore next */\n      this._cleanUp()\n    },\n    methods: {\n      addTab (tab) {\n        this.tabs.push(tab)\n      },\n      removeTab (tab) {\n        const index = this.tabs.indexOf(tab)\n        if (index > -1) this.tabs.splice(index, 1)\n      },\n      trigger (label) {\n        // emit click event as long as tab is clicked\n        this.$emit(EVENT_CLICK, label)\n        // only when value changed, emit change & input event\n        if (label !== this.value) {\n          const changedEvents = [EVENT_INPUT, EVENT_CHANGE]\n          changedEvents.forEach((eventType) => {\n            this.$emit(eventType, label)\n          })\n        }\n      },\n      _updateSliderStyle () {\n        /* istanbul ignore if */\n        if (!this.showSlider) return\n        const slider = this.$refs.slider\n        this.$nextTick(() => {\n          const { width, index } = this._getSliderWidthAndIndex()\n          slider.style.width = `${width}px`\n          this.setSliderTransform(this._getOffsetLeft(index))\n        })\n      },\n      setSliderTransform (offset) {\n        const slider = this.$refs.slider\n        if (typeof offset === 'number') {\n          offset = `${offset}px`\n        }\n        if (slider) {\n          if (this.useTransition) slider.style[TRANSITION] = `${TRANSFORM} 0.2s linear`\n          slider.style[TRANSFORM] = `translateX(${offset}) translateZ(0)`\n        }\n      },\n      _getSliderWidthAndIndex () {\n        let width = 0\n        let index = 0\n        if (this.tabs.length > 0) {\n          index = findIndex(this.tabs, (tab) => tab.label === this.value)\n          width = this.tabs[index].$el.clientWidth\n        }\n        return {\n          width,\n          index\n        }\n      },\n      _getOffsetLeft (index) {\n        let offsetLeft = 0\n        this.tabs.forEach((tab, i) => {\n          if (i < index) offsetLeft += tab.$el.clientWidth\n        })\n        return offsetLeft\n      },\n      _resizeHandler () {\n        clearTimeout(this._resizeTimer)\n        this._resizeTimer = setTimeout(() => {\n          this._updateSliderStyle()\n        }, 60)\n      },\n      _cleanUp () {\n        clearTimeout(this._resizeTimer)\n        window.removeEventListener('resize', this._resizeHandler)\n      }\n    },\n    watch: {\n      value () {\n        this._updateSliderStyle()\n      }\n    }\n  }\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n\n  .cube-tab-bar\n    position: relative\n    display: flex\n    align-items: center\n    justify-content: center\n\n  .cube-tab-bar_inline\n    .cube-tab\n      display: flex\n      align-content: center\n      justify-content: center\n\n  .cube-tab-bar-slider\n    position: absolute\n    left: 0\n    bottom: 0\n    height: 2px\n    width: 20px\n    background-color: $tab-slider-bgc\n</style>\n"],"sourceRoot":"node_modules/cube-ui/src/components/tab-bar"}]}